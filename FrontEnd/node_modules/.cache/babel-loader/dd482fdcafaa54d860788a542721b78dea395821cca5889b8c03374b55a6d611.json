{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_network_graph = _resolveComponent(\"v-network-graph\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Use the transformed data with v-network-graph component \"), _createVNode(_component_v_network_graph, {\n    nodes: $data.nodes,\n    edges: $data.transformedEdges\n  }, null, 8 /* PROPS */, [\"nodes\", \"edges\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createCommentVNode","_createVNode","_component_v_network_graph","nodes","$data","edges","transformedEdges"],"sources":["/Users/zhuang/Desktop/SEP_Project/set_path/src/components/Visualization.vue"],"sourcesContent":["<template>\n    <div>\n      <!-- Use the transformed data with v-network-graph component -->\n      <v-network-graph :nodes=\"nodes\" :edges=\"transformedEdges\" />\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        transformedEdges: [],  // initialized as an array\n        nodes: []  // initialized as an array\n      };\n    },\n    methods: {\n      async fetchNodes() {\n        try {\n          const response = await axios.get('/node');\n          this.nodes = response.data;\n        } catch (error) {\n          console.error(\"Error fetching nodes:\", error);\n        }\n      },\n      async fetchEdges() {\n        try {\n          const response = await axios.get('/edges');\n          console.log(response.data);\n          this.transformedEdges = JSON.parse(JSON.stringify(response.data.map(edge => ({\n            source: edge.src,\n            target: edge.dest\n        }))));\n\n  \n        //   this.transformedEdges = response.data.map(edge => ({\n        //         source: edge.src,\n        //         target: edge.dest\n        //     }));\n          console.log(this.transformedEdges);\n        } catch (error) {\n          console.error(\"Error fetching edges:\", error);\n        }\n      }\n    },\n    async mounted() {\n      await this.fetchNodes();\n      await this.fetchEdges();\n    }\n  };\n  </script>\n  "],"mappings":";;;uBACIA,mBAAA,CAGM,cAFJC,mBAAA,6DAAgE,EAChEC,YAAA,CAA4DC,0BAAA;IAA1CC,KAAK,EAAEC,KAAA,CAAAD,KAAK;IAAGE,KAAK,EAAED,KAAA,CAAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}