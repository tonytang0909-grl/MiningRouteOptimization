{"ast":null,"code":"import axios from 'axios';\nimport { toRaw } from 'vue';\nexport default {\n  data() {\n    return {\n      transformedEdges: {},\n      nodes: {}\n    };\n  },\n  methods: {\n    // Mapping function\n    mapEdges(data) {\n      const result = {};\n      for (let edge in data) {\n        result[edge] = {\n          source: data[edge].src,\n          target: data[edge].dest\n        };\n      }\n      return result;\n    },\n    async fetchNodes() {\n      try {\n        const response = await axios.get('/node');\n        // Transform the fetched data\n        this.nodes = response.data;\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n    async fetchEdges() {\n      try {\n        const response = await axios.get('/edges');\n        // Transform the fetched data\n        this.transformedEdges = toRaw(this.mapEdges(response.data));\n        console.log(this.transformedEdges);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchNodes();\n    this.fetchEdges();\n  }\n};","map":{"version":3,"names":["axios","toRaw","data","transformedEdges","nodes","methods","mapEdges","result","edge","source","src","target","dest","fetchNodes","response","get","error","console","fetchEdges","log","mounted"],"sources":["/Users/zhuang/Desktop/SEP_Project/set_path/src/components/Visualization.vue"],"sourcesContent":["<template>\n    <div>\n      <!-- Use the transformed data with v-network-graph component -->\n      <v-network-graph :nodes=\"nodes\" :edges=\"transformedEdges\" />\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  import { toRaw } from 'vue';\n  \n  export default {\n    data() {\n      return {\n        transformedEdges: {},\n        nodes: {}\n      };\n    },\n    methods: {\n      // Mapping function\n      mapEdges(data) {\n        const result = {};\n        for (let edge in data) {\n          result[edge] = {\n            source: data[edge].src,\n            target: data[edge].dest\n          };\n        }\n        return result;\n      },\n  \n      async fetchNodes() {\n        try {\n          const response = await axios.get('/node');\n          // Transform the fetched data\n          this.nodes = response.data;\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n        }\n      },\n      async fetchEdges() {\n        try {\n          const response = await axios.get('/edges');\n          // Transform the fetched data\n          this.transformedEdges = toRaw(this.mapEdges(response.data));\n          console.log(this.transformedEdges);\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n        }\n      }\n    },\n    mounted() {\n      this.fetchNodes();\n      this.fetchEdges();\n    }\n  };\n  </script>\n  "],"mappings":"AAQE,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,KAAI,QAAS,KAAK;AAE3B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,CAAC,CAAC;MACpBC,KAAK,EAAE,CAAC;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,QAAQA,CAACJ,IAAI,EAAE;MACb,MAAMK,MAAK,GAAI,CAAC,CAAC;MACjB,KAAK,IAAIC,IAAG,IAAKN,IAAI,EAAE;QACrBK,MAAM,CAACC,IAAI,IAAI;UACbC,MAAM,EAAEP,IAAI,CAACM,IAAI,CAAC,CAACE,GAAG;UACtBC,MAAM,EAAET,IAAI,CAACM,IAAI,CAAC,CAACI;QACrB,CAAC;MACH;MACA,OAAOL,MAAM;IACf,CAAC;IAED,MAAMM,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAC,OAAO,CAAC;QACzC;QACA,IAAI,CAACX,KAAI,GAAIU,QAAQ,CAACZ,IAAI;MAC5B,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMJ,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAC,QAAQ,CAAC;QAC1C;QACA,IAAI,CAACZ,gBAAe,GAAIF,KAAK,CAAC,IAAI,CAACK,QAAQ,CAACQ,QAAQ,CAACZ,IAAI,CAAC,CAAC;QAC3De,OAAO,CAACE,GAAG,CAAC,IAAI,CAAChB,gBAAgB,CAAC;MACpC,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR,IAAI,CAACP,UAAU,CAAC,CAAC;IACjB,IAAI,CAACK,UAAU,CAAC,CAAC;EACnB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}