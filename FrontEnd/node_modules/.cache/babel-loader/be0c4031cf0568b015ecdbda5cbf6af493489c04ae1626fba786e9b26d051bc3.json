{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_v_network_graph = _resolveComponent(\"v-network-graph\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Use the transformed data with v-network-graph component \"), _createVNode(_component_v_network_graph, {\n    nodes: _ctx.nodes,\n    edges: _ctx.transformedEdges\n  }, null, 8 /* PROPS */, [\"nodes\", \"edges\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createCommentVNode","_createVNode","_component_v_network_graph","nodes","_ctx","edges","transformedEdges"],"sources":["/Users/zhuang/Desktop/SEP_Project/set_path/src/components/Visualization.vue"],"sourcesContent":["<template>\n    <div>\n      <!-- Use the transformed data with v-network-graph component -->\n      <v-network-graph :nodes=\"nodes\" :edges=\"transformedEdges\" />\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        transformedEdges: {}\n        nodes: {}\n      };\n    },\n    methods: {\n      // Mapping function\n      mapEdges(data) {\n        const result = {};\n        for (let edge in data) {\n          result[edge] = {\n            source: data[edge].src,\n            target: data[edge].dest\n          };\n        }\n        return result;\n      },\n  \n      async fetchNodes() {\n        try {\n          const response = await axios.get('/node');\n          // Transform the fetched data\n          this.nodes = this.mapNodes(response.data);\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n        }\n      },\n      async fetchEdges() {\n        try {\n          const response = await axios.get('/edges');\n          // Transform the fetched data\n          this.transformedEdges = this.mapEdges(response.data);\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n        }\n      }\n    },\n    mounted() {\n      this.fetchNodes();\n      this.fetchEdges();\n    }\n  };\n  </script>\n  "],"mappings":";;;uBACIA,mBAAA,CAGM,cAFJC,mBAAA,6DAAgE,EAChEC,YAAA,CAA4DC,0BAAA;IAA1CC,KAAK,EAAEC,IAAA,CAAAD,KAAK;IAAGE,KAAK,EAAED,IAAA,CAAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}