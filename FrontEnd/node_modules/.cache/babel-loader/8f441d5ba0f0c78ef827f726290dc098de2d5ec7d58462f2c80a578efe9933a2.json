{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      transformedEdges: [],\n      // initialized as an array\n      nodes: [] // initialized as an array\n    };\n  },\n\n  methods: {\n    async fetchNodes() {\n      try {\n        const response = await axios.get('/node');\n        this.nodes = response.data;\n      } catch (error) {\n        console.error(\"Error fetching nodes:\", error);\n      }\n    },\n    async fetchEdges() {\n      try {\n        const response = await axios.get('/edges');\n        console.log(response.data);\n        // this.transformedEdges = response.data;\n\n        this.transformedEdges = response.data.map(edge => ({\n          source: edge.src,\n          target: edge.dest\n        }));\n        console.log(this.transformedEdges);\n      } catch (error) {\n        console.error(\"Error fetching edges:\", error);\n      }\n    }\n  },\n  async mounted() {\n    await this.fetchNodes();\n    await this.fetchEdges();\n  }\n};","map":{"version":3,"names":["axios","data","transformedEdges","nodes","methods","fetchNodes","response","get","error","console","fetchEdges","log","map","edge","source","src","target","dest","mounted"],"sources":["/Users/zhuang/Desktop/SEP_Project/set_path/src/components/Visualization.vue"],"sourcesContent":["<template>\n    <div>\n      <!-- Use the transformed data with v-network-graph component -->\n      <v-network-graph :nodes=\"nodes\" :edges=\"transformedEdges\" />\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        transformedEdges: [],  // initialized as an array\n        nodes: []  // initialized as an array\n      };\n    },\n    methods: {\n      async fetchNodes() {\n        try {\n          const response = await axios.get('/node');\n          this.nodes = response.data;\n        } catch (error) {\n          console.error(\"Error fetching nodes:\", error);\n        }\n      },\n      async fetchEdges() {\n        try {\n          const response = await axios.get('/edges');\n          console.log(response.data);\n            // this.transformedEdges = response.data;\n\n  \n          this.transformedEdges = response.data.map(edge => ({\n                source: edge.src,\n                target: edge.dest\n            }));\n          console.log(this.transformedEdges);\n        } catch (error) {\n          console.error(\"Error fetching edges:\", error);\n        }\n      }\n    },\n    async mounted() {\n      await this.fetchNodes();\n      await this.fetchEdges();\n    }\n  };\n  </script>\n  "],"mappings":"AAQE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,EAAE;MAAG;MACvBC,KAAK,EAAE,EAAC,CAAG;IACb,CAAC;EACH,CAAC;;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAC,OAAO,CAAC;QACzC,IAAI,CAACJ,KAAI,GAAIG,QAAQ,CAACL,IAAI;MAC5B,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMJ,QAAO,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAC,QAAQ,CAAC;QAC1CE,OAAO,CAACE,GAAG,CAACL,QAAQ,CAACL,IAAI,CAAC;QACxB;;QAGF,IAAI,CAACC,gBAAe,GAAII,QAAQ,CAACL,IAAI,CAACW,GAAG,CAACC,IAAG,KAAM;UAC7CC,MAAM,EAAED,IAAI,CAACE,GAAG;UAChBC,MAAM,EAAEH,IAAI,CAACI;QACjB,CAAC,CAAC,CAAC;QACLR,OAAO,CAACE,GAAG,CAAC,IAAI,CAACT,gBAAgB,CAAC;MACpC,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;EACF,CAAC;EACD,MAAMU,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACb,UAAU,CAAC,CAAC;IACvB,MAAM,IAAI,CAACK,UAAU,CAAC,CAAC;EACzB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}